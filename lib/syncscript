#!/bin/bash

## Colors
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)

# Getting input for the monitoring directory
while getopts 'd:' flag; do
  case "${flag}" in
	d) TARGETDIR=${OPTARG} ;;
	*) exit 0 ;;
  esac
done

set -e

# Knitting out the monitoring command
if [ "$(uname -s)" != "Darwin" ]; then
	INW=$(which inotifywait || echo "inotifywait")
	EVENTS="close_write,move,delete,create"
	INCOMMAND="\"$INW\" -qqr -e \"$EVENTS\" --exclude \"\.git\" \"$TARGETDIR\""
else
	INW=$(which fswatch || echo "fswatch")
	# 414 = MovedTo + MovedFrom + Renamed + Removed + Updated + Created
	#                = 256 + 128+ 16 + 8 + 4 + 2
	EVENTS="--event=414"
	INCOMMAND="\"$INW\" --recursive \"$EVENTS\" --exclude \"\.git\" --one-event \"$TARGETDIR\" >/dev/null"
fi

# Storing full path to other binaries being used
GIT=$(which git || echo "git")

# Checking dependencies
for cmd in "$GIT" "$INW"; do
	if [[ $cmd != *"/"* ]]; then
		echo "[${YELLOW}$(date)${WHITE}] [${RED}ERROR${WHITE}] Required command '$cmd' not found" >&2
		exit 1
	fi
done

cd "$TARGETDIR"
echo "${GREEN}[+] ${CYAN}DIRECTORY BEING MONITORED FOR CHANGES: ${YELLOW}$TARGETDIR${WHITE}"
echo "${GREEN}[+] ${CYAN}MONITORING COMMAND: ${YELLOW}$INCOMMAND${WHITE}"

while true; do
	STATUS="$(git status -s)"
	if [[ -n "$STATUS" ]]; then
		echo "[${YELLOW}$(date)${WHITE}]"
		echo "[${CYAN}CHANGE DETECTED${WHITE}] $STATUS"
		$GIT add . # Can't fail :)
		$GIT commit -m "update" && echo "[${GREEN}COMMITTED${WHITE}]" || echo "[${YELLOW}$(date)${WHITE}] [${RED}ERROR${WHITE}] Failed to commit the changes"
		$GIT push origin && echo "[${GREEN}PUSHED${WHITE}]" || echo "[${YELLOW}$(date)${WHITE}] [${RED}ERROR${WHITE}] Failed to push the changes"
	fi
done
