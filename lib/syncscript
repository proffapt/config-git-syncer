#!/bin/bash

while [ $OPTIND -le "$#" ]; do
	if getopts d: input; then
		case "${input}" in

		d) TARGETDIR=${OPTARG} ;;
		*)
			exit 0
			;;
		esac
	else
		script_args+=("${!OPTIND}")
		((OPTIND++))
	fi
done

set -e

stderr() {
	echo "$1" >&2
}

is_command() {
	command -v "$1" &>/dev/null
}

if [ "$(uname)" != "Darwin" ]; then
	INW="inotifywait"
	EVENTS="close_write,move,delete,create"
	INCOMMAND="\"$INW\" -qr -e \"$EVENTS\" --exclude \"\.git\" \"$TARGETDIR\""
else
	INW="fswatch"
	# 414 = MovedTo + MovedFrom + Renamed + Removed + Updated + Created
	#                = 256 + 128+ 16 + 8 + 4 + 2
	EVENTS="--event=414"
	INCOMMAND="\"$INW\" --recursive \"$EVENTS\" --exclude \"\.git\" --one-event \"$TARGETDIR\""
fi

for cmd in "git" "$INW" "timeout"; do
	# in OSX: `timeout` => brew install coreutils
	# in OSX: `fswatch` => brew install fswatch
	is_command "$cmd" || {
		stderr "Error: Required command '$cmd' not found"
		exit 1
	}
done

cd "$TARGETDIR"
echo "$INCOMMAND"

while true; do
	# Pausing the script for 5 seconds after each push
	eval "timeout 5 $INCOMMAND" || true
	STATUS=$(git status -s)
	if [ -n "$STATUS" ]; then
		git add .
		git commit -m "updating via gsync-syncscript by @proffapt"
		git push origin
	fi
done
